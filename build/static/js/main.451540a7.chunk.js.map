{
	"version": 3,
	"sources": [
		"components/generic/Alert.jsx",
		"crypto/get-derived-key.js",
		"components/user/Login.jsx",
		"components/user/Register.jsx",
		"crypto/import-key.js",
		"crypto/encrypt.js",
		"components/create/Form.jsx",
		"components/create/EntryPage.jsx",
		"components/create/EntryBtn.jsx",
		"components/generic/Toast.jsx",
		"components/list/EditIcon.jsx",
		"components/list/LineContainer.jsx",
		"crypto/decrypt.js",
		"helpers/gen-otp.js",
		"components/list/Token.jsx",
		"components/list/List.jsx",
		"components/Home.jsx",
		"components/edit/Edit.jsx",
		"serviceWorker.js",
		"index.js",
		"App.jsx"
	],
	"names": [
		"backdropStyle",
		"zIndex",
		"position",
		"top",
		"left",
		"width",
		"height",
		"backgroundColor",
		"messageWrapperStyle",
		"display",
		"flexFlow",
		"alignItems",
		"justifyContent",
		"messageStyle",
		"maxWidth",
		"padding",
		"borderRadius",
		"boxShadow",
		"btnWrapper",
		"Alert",
		"props",
		"message",
		"className",
		"style",
		"length",
		"onClick",
		"close",
		"getKeyMaterial",
		"plainPassword",
		"enc",
		"TextEncoder",
		"window",
		"crypto",
		"subtle",
		"importKey",
		"encode",
		"name",
		"getKey",
		"keyMaterial",
		"salt",
		"deriveKey",
		"getDerivedKey",
		"a",
		"async",
		"key",
		"exportKey",
		"Login",
		"Jwt",
		"localStorage",
		"getItem",
		"storedKey",
		"useState",
		"username",
		"setUsername",
		"password",
		"setPassword",
		"success",
		"setSuccess",
		"setMessage",
		"push",
		"to",
		"htmlFor",
		"type",
		"id",
		"value",
		"autoComplete",
		"spellCheck",
		"required",
		"onChange",
		"e",
		"target",
		"preventDefault",
		"axios",
		"post",
		"then",
		"res",
		"data",
		"Uint8Array",
		"from",
		"map",
		"ch",
		"charCodeAt",
		"cryptoKey",
		"setItem",
		"JSON",
		"stringify",
		"JWT",
		"submit",
		"Register",
		"passVis",
		"setPassVis",
		"passwordConf",
		"setPasswordConf",
		"getRandomValues",
		"String",
		"fromCharCode",
		"info",
		"newMessage",
		"u",
		"p",
		"jsonWebKey",
		"encrypt",
		"text",
		"iv",
		"encodedText",
		"cipherText",
		"cipherStr",
		"ivStr",
		"Form",
		"secretVis",
		"setSecretVis",
		"advVis",
		"setAdvVis",
		"issuer",
		"setIssuer",
		"setName",
		"secret",
		"setSecret",
		"setType",
		"period",
		"setPeriod",
		"setDigits",
		"digits",
		"setAlgo",
		"algo",
		"toggleAdv",
		"EntryPage",
		"redirect",
		"setRedirect",
		"useEffect",
		"removeItem",
		"parse",
		"encSecret",
		"encIssuer",
		"encName",
		"headers",
		"EntryBtn",
		"xmlns",
		"viewBox",
		"d",
		"fill",
		"Toast",
		"vis",
		"opacity",
		"visibility",
		"EditIcon",
		"delay",
		"index",
		"click",
		"animationDelay",
		"ColorLinearProgress",
		"withStyles",
		"colorPrimary",
		"barColorPrimary",
		"root",
		"bar",
		"LinearProgress",
		"useStyles",
		"makeStyles",
		"theme",
		"marginTop",
		"LineContainer",
		"num",
		"classes",
		"variant",
		"den",
		"dec",
		"TextDecoder",
		"decrypt",
		"decodedText",
		"plainText",
		"decode",
		"genOtp",
		"t",
		"OTPAuth",
		"TOTP",
		"algorithm",
		"HOTP",
		"counter",
		"generate",
		"TokenTile",
		"copy",
		"code",
		"timeRemaining",
		"Token",
		"token",
		"seconds",
		"setId",
		"setCode",
		"setTimeRemaining",
		"epoch",
		"step",
		"Date",
		"now",
		"Math",
		"floor",
		"decSecret",
		"decIssuer",
		"decName",
		"setEncryptedItems",
		"c",
		"newCode",
		"navigator",
		"clipboard",
		"writeText",
		"complete",
		"List",
		"tokens",
		"setTokens",
		"toastVis",
		"setToastVis",
		"setSeconds",
		"tickerSeconds",
		"updateTicker",
		"setInterval",
		"clearInterval",
		"get",
		"toastTimeout",
		"setTimeout",
		"clearTimeout",
		"i",
		"Home",
		"Edit",
		"useParams",
		"cancel",
		"setCancel",
		"loaded",
		"setLoaded",
		"confirm",
		"Boolean",
		"location",
		"hostname",
		"match",
		"ReactDOM",
		"render",
		"path",
		"document",
		"getElementById",
		"serviceWorker",
		"ready",
		"registration",
		"unregister"
	],
	"mappings": "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",
	"file": "static/js/main.451540a7.chunk.js",
	"sourcesContent": [
		"import React from 'react';\n\nconst backdropStyle = {\n\tzIndex: 10,\n\tposition: 'fixed',\n\ttop: 0,\n\tleft: 0,\n\twidth: '100vw',\n\theight: '100vh',\n\tbackgroundColor: 'rgba(0,0,0,0.7)'\n};\n\nconst messageWrapperStyle = {\n\tzIndex: 11,\n\tposition: 'fixed',\n\ttop: 0,\n\tleft: 0,\n\twidth: '100vw',\n\theight: '100vh',\n\tdisplay: 'flex',\n\tflexFlow: 'column',\n\talignItems: 'center',\n\tjustifyContent: 'center'\n};\n\nconst messageStyle = {\n\tzIndex: 12,\n\twidth: 'calc(96% - 40px)',\n\tmaxWidth: '460px',\n\tpadding: '10px 20px',\n\tborderRadius: '10px',\n\tboxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)'\n};\n\nconst btnWrapper = {\n\twidth: '100%',\n\tdisplay: 'flex',\n\tjustifyContent: 'flex-end'\n};\n\nconst Alert = (props) => {\n\tconst message = props.message;\n\n\treturn (\n\t\t<div className='Alert' style={message.length > 0 ? {display: 'block'} : {display: 'none'}}>\n\n\t\t\t<div style={backdropStyle}></div>\n\n\t\t\t<div style={messageWrapperStyle}>\n\t\t\t\t<div style={messageStyle} className='alertBox'>\n\t\t\t\t\t<h2>Message</h2>\n\t\t\t\t\t<p>{message}</p>\n\t\t\t\t\t<div style={btnWrapper}>\n\t\t\t\t\t\t<button onClick={() => props.close()} className='primaryBtn alertBtn'>Ok</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n\nexport default Alert;",
		"\nfunction getKeyMaterial(plainPassword) {\n\tconst enc = new TextEncoder();\n\treturn window.crypto.subtle.importKey(\n\t\t\"raw\",\n\t\tenc.encode(plainPassword),\n\t\t{name: \"PBKDF2\"},\n\t\tfalse,\n\t\t[\"deriveBits\", \"deriveKey\"]\n\t);\n}\n\n\nfunction getKey(keyMaterial, salt) {\n\treturn window.crypto.subtle.deriveKey(\n\t\t{\n\t\t\t\"name\": \"PBKDF2\",\n\t\t\tsalt: salt,\n\t\t\t\"iterations\": 100000,\n\t\t\t\"hash\": \"SHA-256\"\n\t\t},\n\t\tkeyMaterial,\n\t\t{ \"name\": \"AES-GCM\", \"length\": 256},\n\t\ttrue,\n\t\t[ \"encrypt\", \"decrypt\" ]\n\t);\n}\n\n\nasync function getDerivedKey(plainPassword, salt) {\n\tlet keyMaterial = await getKeyMaterial(plainPassword);\n\tlet key = await getKey(keyMaterial, salt);\n\n\tconst exportKey = await window.crypto.subtle.exportKey(\n\t\t\"jwk\",\n\t\tkey\n\t);\n\n\treturn exportKey;\n}\n\n\nexport default getDerivedKey;",
		"import React, {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport Alert from '../generic/Alert';\nimport getDerivedKey from '../../crypto/get-derived-key';\n\n\nfunction Login(props) {\n\tconst Jwt = localStorage.getItem('Jwt');\n\tconst storedKey = localStorage.getItem('cryptoKey');\n\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [success, setSuccess] = useState(false);\n\tconst [message, setMessage] = useState('');\n\n\n\tfunction submit(e) {\n\t\te.preventDefault();\n\n\t\taxios.post('https://ultraotp.com/api/user/login', {username: username, password: password}).then(async (res) => {\n\t\t\tif (res.data.success) {\n\t\t\t\tconst cryptoKey = await getDerivedKey(password, Uint8Array.from([...res.data.salt].map(ch => ch.charCodeAt())));\n\t\t\t\tlocalStorage.setItem('cryptoKey', JSON.stringify(cryptoKey));\n\t\t\t\tlocalStorage.setItem('JWT', res.data.JWT);\n\t\t\t\tsetSuccess(true);\n\t\t\t} else {\n\t\t\t\tsetMessage(res.data.message);\n\t\t\t}\n\t\t});\n\t}\n\n\n\tif (success || (Jwt && storedKey)) {\n\t\treturn <Redirect push to='/list'/>;\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<Alert message={message} close={() => setMessage('')}/>\n\n\t\t\t\t<h1>Login</h1>\n\n\t\t\t\t<form className='entryForm'>\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='username'>Username</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tautoComplete='username'\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tautoComplete='current-password'\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input type='submit' className='primaryBtn userBtn' onClick={e => submit(e)} value='Sign In'/>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n",
		"import React, {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport Alert from '../generic/Alert';\nimport getDerivedKey from '../../crypto/get-derived-key';\n\nfunction Register(props) {\n\tconst Jwt = localStorage.getItem('JWT');\n\tconst storedKey = localStorage.getItem('cryptoKey');\n\n\tconst [passVis, setPassVis] = useState(false);\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [passwordConf, setPasswordConf] = useState('');\n\tconst [success, setSuccess] = useState(false);\n\tconst [message, setMessage] = useState('');\n\n\n\tasync function submit(e){\n\t\te.preventDefault();\n\n\t\tif (password === username) {\n\t\t\tsetMessage('Username and password must not match. Please update and try again.');\n\t\t} else if (password !== passwordConf) {\n\t\t\tsetMessage('Master password confirmation must match. Please update and try again.');\n\t\t} else if (password.length < 12) {\n\t\t\tsetMessage('Master password must contain at least 12 characters.');\n\t\t} else {\n\n\t\t\tconst salt = await window.crypto.getRandomValues(new Uint8Array(16));\n\n\t\t\taxios.post('https://ultraotp.com/api/user/register', {\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password,\n\t\t\t\tsalt: String.fromCharCode(...new Uint8Array(salt))\n\t\t\t}).then(async (res) => {\n\n\t\t\t\tif (res.data.success) {\n\t\t\t\t\tconst cryptoKey = await getDerivedKey(password, salt);\n\t\t\t\t\tlocalStorage.setItem('cryptoKey', JSON.stringify(cryptoKey));\n\t\t\t\t\tlocalStorage.setItem('JWT', res.data.JWT);\n\t\t\t\t\tsetSuccess(true);\n\n\t\t\t\t} else if (res.data.info) {\n\t\t\t\t\tlet newMessage = res.data.info.u.message + '\\n' + res.data.info.p.message;\n\t\t\t\t\tsetMessage(newMessage);\n\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage(res.data.message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\tif (success || (Jwt && storedKey)) {\n\t\treturn <Redirect push to='/list'/>;\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<Alert message={message} close={() => setMessage('')}/>\n\n\t\t\t\t<h1>Register</h1>\n\n\t\t\t\t<form className='entryForm'>\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='username'>Create a Username <span>(4 - 120 chars.)</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tautoComplete='username'\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='password'>Master Password <span>(12 - 120 chars.)</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype={passVis ? 'text' : 'password'}\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>The master password is used to encrypt and access your tokens. It is critical that you do not forget your master password; there is no way to recover the password in the event that you forget it.</small>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='passwordConf'>Re-type Master Password <span>(12 - 120 chars.)</span></label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype={passVis ? 'text' : 'password'}\n\t\t\t\t\t\t\tid='passwordConf'\n\t\t\t\t\t\t\tname='passwordConf'\n\t\t\t\t\t\t\tvalue={passwordConf}\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t\tspellCheck={false}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\t\tonChange={e => setPasswordConf(e.target.value)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className='checkContainer'>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tid='passCheck'\n\t\t\t\t\t\t\t\tname='passCheck'\n\t\t\t\t\t\t\t\tonChange={() => setPassVis(!passVis)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor='passCheck'>Show Password</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input type='submit' className='primaryBtn userBtn' onClick={e => submit(e)} value='Register'/>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Register;\n",
		"async function importKey(jsonWebKey) {\n\tconst key = window.crypto.subtle.importKey(\n\t\t'jwk',\n\t\tjsonWebKey,\n\t\t{name: 'AES-GCM', length: 256},\n\t\ttrue,\n\t\t['encrypt', 'decrypt']\n\t);\n\treturn key;\n}\n\nexport default importKey;",
		"import importKey from './import-key';\n\n\nconst enc = new TextEncoder();\n\nasync function encrypt(jsonWebKey, text) {\n\tconst key = await importKey(jsonWebKey);\n\tconst iv = window.crypto.getRandomValues(new Uint8Array(12));\n\tconst encodedText = enc.encode(text);\n\n\tconst cipherText = await window.crypto.subtle.encrypt(\n\t\t{\n\t\t\tname: \"AES-GCM\",\n\t\t\tiv: iv\n\t\t},\n\t\tkey,\n\t\tencodedText\n\t);\n\n\tconst cipherStr = String.fromCharCode(...new Uint8Array(cipherText));\n\tconst ivStr = String.fromCharCode(...new Uint8Array(iv));\n\n\treturn {\n\t\ttext: cipherStr,\n\t\tiv: ivStr\n\t}\n}\n\nexport default encrypt;",
		"import React, {useState} from 'react';\n\nexport default function Form(props) {\n\tconst [secretVis, setSecretVis] = useState(false);\n\tconst [advVis, setAdvVis] = useState(false);\n\n\tconst toggleAdv = e => {\n\t\te.preventDefault();\n\t\tsetAdvVis(!advVis);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<form className='entryForm'>\n\n\n\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t<label htmlFor='issuer'>Issuer</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='issuer'\n\t\t\t\t\t\tname='issuer'\n\t\t\t\t\t\tvalue={props.issuer}\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\tonChange={e => props.setIssuer(e.target.value)}/>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t<label htmlFor='name'>Label</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\tvalue={props.name}\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\tonChange={e => props.setName(e.target.value)}/>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className='formGroup'>\n\n\t\t\t\t\t<label htmlFor='name'>Secret</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype={secretVis ? 'text' : 'password'}\n\t\t\t\t\t\tid='secret'\n\t\t\t\t\t\tname='secret'\n\t\t\t\t\t\tvalue={props.secret}\n\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\tonChange={e => props.setSecret(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className='checkContainer'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tid='secCheck'\n\t\t\t\t\t\t\tname='secCheck'\n\t\t\t\t\t\t\tonChange={() => setSecretVis(!secretVis)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='secCheck'>Show Secret</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\n\t\t\t\t<div style={advVis ? {display: 'flex'} : {display: 'none'}} className='advContainer'>\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='type'>Type</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tid='type'\n\t\t\t\t\t\t\tname='type'\n\t\t\t\t\t\t\tclassName='primarySelect'\n\t\t\t\t\t\t\tonChange={e => props.setType(e.target.value)}\n\t\t\t\t\t\t\tvalue={props.type}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='totp'>TOTP</option>\n\t\t\t\t\t\t\t<option value='hotp'>HOTP</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='period'>{props.type === 'hotp' ? 'Counter' : 'Period (in seconds)'} </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='period'\n\t\t\t\t\t\t\tname='period'\n\t\t\t\t\t\t\tvalue={props.period}\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\tclassName='primaryInput'\n\t\t\t\t\t\t\tonChange={e => props.setPeriod(e.target.value)}/>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='digits'>Digits</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tid='digits'\n\t\t\t\t\t\t\tname='digits'\n\t\t\t\t\t\t\tclassName='primarySelect'\n\t\t\t\t\t\t\tonChange={e => props.setDigits(e.target.value)}\n\t\t\t\t\t\t\tvalue={props.digits}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='6'>6</option>\n\t\t\t\t\t\t\t<option value='8'>8</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t\t<label htmlFor='algo'>Algorithm</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tid='algo'\n\t\t\t\t\t\t\tname='algo'\n\t\t\t\t\t\t\tclassName='primarySelect'\n\t\t\t\t\t\t\tonChange={e => props.setAlgo(e.target.value)}\n\t\t\t\t\t\t\tvalue={props.algo}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value='SHA1'>SHA1</option>\n\t\t\t\t\t\t\t<option value='SHA256'>SHA256</option>\n\t\t\t\t\t\t\t<option value='SHA512'>SHA512</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className='formGroup'>\n\t\t\t\t\t<button onClick={e => toggleAdv(e)} className='advBtn'>\n\t\t\t\t\t\t{advVis ? `Hide` : `More Options`}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\n\t\t\t\t<input type='submit' className='primaryBtn userBtn' onClick={e => props.submit(e)} value='Submit'/>\n\n\n\t\t\t</form>\n\t\t</>\n\t);\n}",
		"import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios';\n\nimport encrypt from '../../crypto/encrypt';\nimport Alert from '../generic/Alert';\nimport Form from './Form';\n\n\nfunction EntryPage() {\n\tconst [type, setType] = useState('totp');\n\tconst [name, setName] = useState('');\n\tconst [issuer, setIssuer] = useState('');\n\tconst [algo, setAlgo] = useState('SHA1');\n\tconst [digits, setDigits] = useState(6);\n\tconst [period, setPeriod] = useState(30);\n\tconst [secret, setSecret] = useState('');\n\n\tconst [redirect, setRedirect] = useState(null);\n\tconst [message, setMessage] = useState('');\n\n\n\tuseEffect(() => {\n\t\tconst Jwt = localStorage.getItem('JWT');\n\t\tconst cryptoKey = localStorage.getItem('cryptoKey');\n\n\t\tif (!(Jwt && cryptoKey)) {\n\t\t\tlocalStorage.removeItem('JWT');\n\t\t\tlocalStorage.removeItem('cryptoKey');\n\t\t\tsetRedirect('/');\n\t\t}\n\n\t}, []);\n\n\n\tasync function submit(e) {\n\t\te.preventDefault();\n\t\tif (!secret) {\n\t\t\tsetMessage('No secret provided. Operation not performed.');\n\t\t} else if (!issuer) {\n\t\t\tsetMessage('No issuer provided. Operate not performed.');\n\t\t} else if (!name) {\n\t\t\tsetMessage('No label provided. Operation not performed.');\n\t\t} else {\n\t\t\tconst key = JSON.parse(localStorage.getItem('cryptoKey'));\n\t\t\tconst encSecret = await encrypt(key, secret);\n\t\t\tconst encIssuer = await encrypt(key, issuer);\n\t\t\tconst encName = await encrypt(key, name);\n\n\t\t\taxios.post('https://ultraotp.com/api/doc/new', {\n\t\t\t\t\t'issuer': {\n\t\t\t\t\t\t'text': encIssuer.text,\n\t\t\t\t\t\t'iv': encIssuer.iv\n\t\t\t\t\t},\n\t\t\t\t\t'name': {\n\t\t\t\t\t\t'text': encName.text,\n\t\t\t\t\t\t'iv': encName.iv\n\t\t\t\t\t},\n\t\t\t\t\t'secret': {\n\t\t\t\t\t\t'text': encSecret.text,\n\t\t\t\t\t\t'iv': encSecret.iv\n\t\t\t\t\t},\n\t\t\t\t\t'type': type,\n\t\t\t\t\t'algo': algo,\n\t\t\t\t\t'digits': digits,\n\t\t\t\t\t'period': period\n\t\t\t\t},\n\t\t\t\t{headers: {'Authorization': `JWT ${localStorage.getItem('JWT')}`}}).then(res => {\n\t\t\t\tif (res.data.success) {\n\t\t\t\t\tsetRedirect('/list');\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage(res.data.message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\tif (redirect) {\n\t\treturn <Redirect push to={`${redirect}`}/>;\n\t} else {\n\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<Alert close={() => setMessage('')} message={message}/>\n\n\n\t\t\t\t<div className='homeHeader'>\n\t\t\t\t\t<h1>Add New Token</h1>\n\t\t\t\t\t<button className='primaryBtn redirectBtn alertBtn cancelBtn'\n\t\t\t\t\t\t\t\t\tonClick={() => setRedirect('list')}>Cancel\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className='otpFormWrapper' style={{display: 'block'}}>\n\n\t\t\t\t\t<Form\n\t\t\t\t\t\talgo={algo}\n\t\t\t\t\t\tdigits={digits}\n\t\t\t\t\t\tissuer={issuer}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tperiod={period}\n\t\t\t\t\t\tsecret={secret}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tsubmit={submit}\n\t\t\t\t\t\tsetIssuer={setIssuer}\n\t\t\t\t\t\tsetName={setName}\n\t\t\t\t\t\tsetSecret={setSecret}\n\t\t\t\t\t\tsetType={setType}\n\t\t\t\t\t\tsetPeriod={setPeriod}\n\t\t\t\t\t\tsetDigits={setDigits}\n\t\t\t\t\t\tsetAlgo={setAlgo}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EntryPage;",
		"import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nfunction EntryBtn(props) {\n\n\treturn (\n\t\t<div className='EntryBtn'>\n\n\t\t\t<Link className='CircleLink' to='/new'>\n\t\t\t\t<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'>\n\t\t\t\t\t<path d='M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' fill='#ffffff'/>\n\t\t\t\t\t<path d='M0 0h24v24H0z' fill='none'/>\n\t\t\t\t</svg>\n\t\t\t\t<span className='CircleSpan'> CREATE</span>\n\t\t\t</Link>\n\n\t\t</div>\n\t);\n}\n\nexport default EntryBtn;\n",
		"import React from 'react';\n\n\nexport default function Toast(props) {\n\treturn (\n\t\t<div className='ToastOuter'\n\t\t\t\t style={props.vis ? {opacity: '1', visibility: 'visible', zIndex: 1000} : {opacity: '0', visibility: 'hidden', zIndex: '-1'}}>\n\t\t\t<div className='Toast'>\n\t\t\t\t<span>{props.message}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};",
		"import React from 'react';\n\nexport default function EditIcon(props) {\n\tconst delay = (props.index * .075);\n\n\tfunction handleClick() {\n\t\tif (props.click) {\n\t\t\tprops.click();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='EditIconWrapper'>\n\t\t\t<button className={'EditIconInner ' + (props.click ? 'desktopEdit fade-in' : '')} style={props.click && {animationDelay: `${delay}s`}} onClick={() => handleClick()}>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n\t\t\t</button>\n\t\t</div>\n\t)\n}",
		"import React from 'react';\nimport {makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\nconst ColorLinearProgress = withStyles({\n\tcolorPrimary: {\n\t\tbackgroundColor: '#eeeeee',\n\t},\n\tbarColorPrimary: {\n\t\tbackgroundColor: 'rgba(50, 232, 117, 0.5)',\n\t},\n\troot: {\n\t\tborderRadius: '10px'\n\t},\n\tbar: {\n\t\tborderRadius: '10px'\n\t}\n})(LinearProgress);\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tmarginTop: '2px',\n\t\theight: '2px',\n\t\tborderRadius: '10px'\n\t}\n}));\n\n\nexport default function LineContainer(props) {\n\tconst num = props.num;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className='lineContainer' >\n\t\t\t{/*<Line*/}\n\t\t\t{/*\tstyle={{width: '50px'}}*/}\n\t\t\t{/*\tpercent={num >= 1 ? ((props.num / props.den) * 100) : 1}*/}\n\t\t\t{/*\tstrokeWidth={1}*/}\n\t\t\t{/*\tstrokeColor='rgba(50, 232, 117, 0.4)'*/}\n\t\t\t{/*\ttrailWidth={1}*/}\n\t\t\t{/*\ttrailColor='#eeeeee'*/}\n\t\t\t{/*/>*/}\n\t\t\t<ColorLinearProgress variant=\"determinate\" className={classes.root} value={num >= 1 ? ((props.num / props.den) * 100) : 1} />\n\t\t</div>\n\t)\n}",
		"import importKey from './import-key';\n\nconst dec = new TextDecoder();\n\nasync function decrypt(jsonWebKey, decodedText, ivStr) {\n\tconst key = await importKey(jsonWebKey);\n\tconst cipherText = Uint8Array.from([...decodedText].map(ch => ch.charCodeAt()));\n\tconst iv = Uint8Array.from([...ivStr].map(ch => ch.charCodeAt()));\n\n\tconst plainText = await window.crypto.subtle.decrypt({\n\t\t\tname: \"AES-GCM\",\n\t\t\tiv: iv\n\t\t},\n\t\tkey,\n\t\tcipherText\n\t);\n\n\treturn dec.decode(plainText);\n}\n\nexport default decrypt;",
		"import OTPAuth from 'otpauth';\n\nexport default function genOtp(t, secret) {\n\tlet token;\n\n\tif (t.type === 'totp') {\n\t\ttoken = new OTPAuth.TOTP({\n\t\t\talgorithm: t.algo,\n\t\t\tdigits: t.digits,\n\t\t\tperiod: t.period,\n\t\t\tsecret: secret\n\t\t});\n\t} else {\n\t\ttoken = new OTPAuth.HOTP({\n\t\t\talgorithm: t.algo,\n\t\t\tdigits: t.digits,\n\t\t\tcounter: t.period,\n\t\t\tsecret: secret\n\t\t});\n\t}\n\n\treturn token.generate();\n}",
		"import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport EditIcon from './EditIcon';\nimport LineContainer from './LineContainer';\nimport decrypt from '../../crypto/decrypt';\nimport genOtp from '../../helpers/gen-otp';\n\n\nfunction TokenTile(props) {\n\tconst delay = (props.index * .075);\n\n\treturn (\n\t\t<div className='Token fade-in' onClick={() => props.copy(props.code)} style={{animationDelay: `${delay}s`}}>\n\n\t\t\t<div className='tokenInfo'>\n\t\t\t\t<p className='tIssuer'>{props.issuer}</p>\n\t\t\t\t<p className='tLabel'>{props.name}</p>\n\t\t\t</div>\n\n\t\t\t<div className='tokenCode'>\n\t\t\t\t<h2>{props.code}</h2>\n\t\t\t\t{props.timeRemaining >= 0 && <LineContainer num={props.timeRemaining} den={props.period} />}\n\t\t\t</div>\n\n\t\t</div>\n\t)\n}\n\nfunction getTimeRemaining(epoch, step) {\n\treturn step - (Math.floor(epoch / 1000) % step);\n}\n\n\nfunction Token(props) {\n\tconst t = props.token;\n\tconst seconds = t.type === 'totp' ? props.seconds : null;\n\tconst [id, setId] = useState(null);\n\tconst [name, setName] = useState(null);\n\tconst [code, setCode] = useState(null);\n\tconst [secret, setSecret] = useState(null);\n\tconst [issuer, setIssuer] = useState(null);\n\tconst [timeRemaining, setTimeRemaining] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tconst cryptoKey = JSON.parse(localStorage.getItem('cryptoKey'));\n\n\t\tasync function setEncryptedItems() {\n\t\t\tconst decSecret = await decrypt(cryptoKey, t.secret.text, t.secret.iv);\n\t\t\tconst decIssuer = await decrypt(cryptoKey, t.issuer.text, t.issuer.iv);\n\t\t\tconst decName = await decrypt(cryptoKey, t.name.text, t.name.iv);\n\t\t\tsetCode(genOtp(t, decSecret));\n\t\t\tsetSecret(decSecret);\n\t\t\tsetIssuer(decIssuer);\n\t\t\tsetName(decName);\n\t\t}\n\n\t\tif (t.type === 'totp') {\n\t\t\tsetTimeRemaining(getTimeRemaining(Date.now(), t.period));\n\t\t}\n\n\t\tsetEncryptedItems();\n\t},[t]);\n\n\n\tuseEffect(() => {\n\t\tif (seconds) {\n\t\t\tsetTimeRemaining(c => c - 1);\n\t\t}\n\t}, [seconds]);\n\n\n\tuseEffect(() => {\n\t\tif (secret && timeRemaining <= 1) {\n\t\t\tlet newCode = genOtp(t, secret);\n\n\t\t\tif (newCode !== code) {\n\t\t\t\tsetCode(newCode);\n\t\t\t\tsetTimeRemaining(t.period);\n\t\t\t}\n\n\t\t}\n\t}, [timeRemaining, t, secret, code]);\n\n\n\tconst copy = (code) => {\n\t\tnavigator.clipboard.writeText(code).then(() => props.complete());\n\t};\n\n\n\tconst handleSwipe = () => {\n\t\tsetTimeout(() => {\n\t\t\tsetId(t.id)\n\t\t}, 120);\n\t};\n\n\n\tif (id) {\n\t\treturn (<Redirect push to={`/edit/${id}`}/>);\n\t} else if (secret && issuer && name) {\n\t\t\treturn (\n\t\t\t\t<div className='desktopTokenWrapper'>\n\t\t\t\t\t<TokenTile copy={copy} issuer={issuer} name={name} period={t.period} code={code} timeRemaining={timeRemaining} index={props.index} />\n\t\t\t\t\t<EditIcon click={() => setId(t.id)} index={props.index} />\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\treturn <div></div>\n\t}\n}\n\nexport default Token;\n",
		"import React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios';\n\nimport EntryBtn from '../create/EntryBtn';\nimport Alert from '../generic/Alert';\nimport Toast from '../generic/Toast';\nimport Token from './Token';\n\n\nfunction List() {\n\tconst [tokens, setTokens] = useState([]);\n\tconst [redirect, setRedirect] = useState(null);\n\tconst [message, setMessage] = useState('');\n\tconst [toastVis, setToastVis] = useState(false);\n\tconst [seconds, setSeconds] = useState(0);\n\n\n\tfunction getTokens() {\n\t\taxios.get('https://ultraotp.com/api/doc/tokens', {headers: {'Authorization': `JWT ${localStorage.getItem('JWT')}`}}).then(res => {\n\t\t\tif (res.data.success) {\n\t\t\t\tsetTokens(res.data.tokens);\n\t\t\t\tlocalStorage.setItem('lastUpdate', Date.now());\n\t\t\t} else {\n\t\t\t\tsetMessage(res.data.message);\n\t\t\t}\n\t\t});\n\t}\n\n\n\tuseEffect(() => {\n\t\tlet tickerSeconds = 0;\n\n\t\tvar updateTicker = setInterval(() => {\n\t\t\t\ttickerSeconds++;\n\t\t\t\tsetSeconds(tickerSeconds);\n\t\t}, 1000);\n\n\t\treturn function cleanup() {\n\t\t\tclearInterval(updateTicker);\n\t\t}\n\n\t}, []);\n\n\n\n\tuseEffect(() => {\n\t\tconst Jwt = localStorage.getItem('JWT');\n\t\tconst cryptoKey = localStorage.getItem('cryptoKey');\n\n\t\tif (Jwt && cryptoKey) {\n\t\t\tgetTokens();\n\t\t} else {\n\t\t\tlocalStorage.removeItem('JWT');\n\t\t\tlocalStorage.removeItem('cryptoKey');\n\t\t\tsetRedirect('/');\n\t\t}\n\t}, []);\n\n\n\tuseEffect(() => {\n\t\tif (toastVis) {\n\t\t\tvar toastTimeout = setTimeout(() => {\n\t\t\t\tsetToastVis(false);\n\t\t\t}, 2000);\n\t\t}\n\n\t\treturn function cleanup() {\n\t\t\tclearTimeout(toastTimeout);\n\t\t};\n\t}, [toastVis]);\n\n\n\tfunction logout() {\n\t\tlocalStorage.removeItem('JWT');\n\t\tlocalStorage.removeItem('cryptoKey');\n\t\tsetRedirect('/');\n\t}\n\n\n\tif (redirect) {\n\t\treturn <Redirect to={redirect}/>;\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<Alert close={() => setMessage('')} message={message}/>\n\n\t\t\t\t<Toast message='Copied!' vis={toastVis}/>\n\n\t\t\t\t<div className='homeHeader'>\n\t\t\t\t\t<h1>Ultra OTP</h1>\n\t\t\t\t\t<button className='primaryBtn logoutBtn redirectBtn' onClick={() => logout()}>Log Out</button>\n\t\t\t\t</div>\n\n\t\t\t\t<ul className='tokenList'>\n\t\t\t\t\t{tokens.map((t, i) =>\n\t\t\t\t\t\t<li key={t.id}><Token token={t} seconds={seconds} complete={() => setToastVis(true)} index={i}/></li>)}\n\t\t\t\t</ul>\n\n\t\t\t\t<EntryBtn/>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default List;",
		"import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\n\n\nfunction Home() {\n\tconst Jwt = localStorage.getItem('JWT');\n\tconst cryptoKey = localStorage.getItem('cryptoKey');\n\n\tif (Jwt && cryptoKey) {\n\t\treturn (<Redirect to='/list'/>);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<div className='homeHeader'>\n\n\t\t\t\t\t<div className='homeTitles'>\n\t\t\t\t\t\t<h1>Ultra OTP</h1>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<nav className='homeLinksWrapper'>\n\t\t\t\t\t\t<Link to='/register' className='primaryBtn alertBtn cancelBtn btnFlex'>Register</Link>\n\t\t\t\t\t\t<Link to='/login' className='primaryBtn alertBtn'>Sign In</Link>\n\t\t\t\t\t</nav>\n\n\t\t\t\t</div>\n\n\t\t\t\t{/*<h2>Multi-device 2FA tool</h2>*/}\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;",
		"import React, {useState, useEffect} from 'react';\nimport {Redirect, useParams} from 'react-router-dom';\nimport axios from 'axios';\n\nimport Alert from '../generic/Alert';\nimport Form from '../create/Form';\nimport decrypt from '../../crypto/decrypt';\nimport encrypt from '../../crypto/encrypt';\n\n\nexport default function Edit() {\n\tconst {id} = useParams();\n\n\tconst [cancel, setCancel] = useState(null);\n\tconst [message, setMessage] = useState('');\n\tconst [loaded, setLoaded] = useState(false);\n\tconst [digits, setDigits] = useState('');\n\tconst [issuer, setIssuer] = useState('');\n\tconst [period, setPeriod] = useState('');\n\tconst [secret, setSecret] = useState('');\n\tconst [type, setType] = useState('');\n\tconst [name, setName] = useState('');\n\tconst [algo, setAlgo] = useState('');\n\n\n\tasync function setEncryptedItems(key, secret, issuer, name) {\n\t\tconst decSecret = await decrypt(key, secret.text, secret.iv);\n\t\tconst decIssuer = await decrypt(key, issuer.text, issuer.iv);\n\t\tconst decName = await decrypt(key, name.text, name.iv);\n\t\tsetSecret(decSecret);\n\t\tsetIssuer(decIssuer);\n\t\tsetName(decName);\n\t}\n\n\n\tuseEffect(() => {\n\t\tif (localStorage.getItem('JWT') && localStorage.getItem('JWT')) {\n\t\t\taxios.get(`https://ultraotp.com/api/doc/token/${id}`, {headers: {'Authorization': `JWT ${localStorage.getItem('JWT')}`}}).then(res => {\n\t\t\t\tif (res.data.success) {\n\t\t\t\t\tconst t = res.data.token;\n\t\t\t\t\tconst cryptoKey = JSON.parse(localStorage.getItem('cryptoKey'));\n\t\t\t\t\tsetEncryptedItems(cryptoKey, t.secret, t.issuer, t.name);\n\n\t\t\t\t\tsetDigits(t.digits);\n\t\t\t\t\tsetPeriod(t.period);\n\t\t\t\t\tsetType(t.type);\n\t\t\t\t\tsetAlgo(t.algo);\n\t\t\t\t\tsetLoaded(true);\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage(res.data.message);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tsetCancel(true);\n\t\t}\n\t}, [id]);\n\n\n\tasync function submit(e) {\n\t\te.preventDefault();\n\n\t\tif (!secret) {\n\t\t\tsetMessage('No secret provided. Operation not performed.');\n\t\t} else if (!issuer) {\n\t\t\tsetMessage('No issuer provided. Operate not performed.');\n\t\t} else if (!name) {\n\t\t\tsetMessage('No label provided. Operation not performed.');\n\t\t} else {\n\t\t\tconst cryptoKey = JSON.parse(localStorage.getItem('cryptoKey'));\n\t\t\tconst encSecret = await encrypt(cryptoKey, secret);\n\t\t\tconst encIssuer = await encrypt(cryptoKey, issuer);\n\t\t\tconst encName = await encrypt(cryptoKey, name);\n\n\t\t\taxios.post(`https://ultraotp.com/api/doc/update/${id}`, {\n\t\t\t\tdigits: digits,\n\t\t\t\tperiod: period,\n\t\t\t\ttype: type,\n\t\t\t\talgo: algo,\n\t\t\t\tissuer: {\n\t\t\t\t\ttext: encIssuer.text,\n\t\t\t\t\tiv: encIssuer.iv\n\t\t\t\t},\n\t\t\t\tname: {\n\t\t\t\t\ttext: encName.text,\n\t\t\t\t\tiv: encName.iv\n\t\t\t\t},\n\t\t\t\tsecret: {\n\t\t\t\t\ttext: encSecret.text,\n\t\t\t\t\tiv: encSecret.iv\n\t\t\t\t}\n\t\t\t},{headers: {'Authorization': `JWT ${localStorage.getItem('JWT')}`}}).then(res => {\n\t\t\t\tif (res.data.success) {\n\t\t\t\t\tsetCancel(true);\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage(res.data.message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\tconst deleteToken = () => {\n\t\tif (window.confirm('Are you sure you want to delete this token?')) {\n\t\t\taxios.post(`https://ultraotp.com/api/doc/delete/${id}`, null, {headers: {'Authorization': `JWT ${localStorage.getItem('JWT')}`}}).then(res => {\n\t\t\t\tif (res.data.success) {\n\t\t\t\t\tsetCancel(true);\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage(res.data.message);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (cancel || !id) {\n\t\treturn (\n\t\t\t<Redirect to='/list'/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<Alert message={message} close={() => setMessage('')}/>\n\n\t\t\t\t<div className='homeHeader'>\n\t\t\t\t\t<h1>Edit</h1>\n\n\t\t\t\t\t<div className='homeLinksWrapper linkFlexRight'>\n\t\t\t\t\t\t<button className='primaryBtn alertBtn cancelBtn btnFlex' onClick={() => setCancel(true)}>Cancel</button>\n\t\t\t\t\t\t<button className='primaryBtn logoutBtn btnFlex' onClick={() => deleteToken()}>Delete Token</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className='otpFormWrapper' style={loaded ? {display: 'block'} : {display: 'none'}}>\n\n\t\t\t\t\t<Form\n\t\t\t\t\t\talgo={algo}\n\t\t\t\t\t\tdigits={digits}\n\t\t\t\t\t\tissuer={issuer}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tperiod={period}\n\t\t\t\t\t\tsecret={secret}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tsubmit={submit}\n\t\t\t\t\t\tsetIssuer={setIssuer}\n\t\t\t\t\t\tsetName={setName}\n\t\t\t\t\t\tsetSecret={setSecret}\n\t\t\t\t\t\tsetType={setType}\n\t\t\t\t\t\tsetPeriod={setPeriod}\n\t\t\t\t\t\tsetDigits={setDigits}\n\t\t\t\t\t\tsetAlgo={setAlgo}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t);\n\t}\n}",
		"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  }).catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  }).then(response => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  }).catch(() => {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    );\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
		"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();",
		"import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './styles/App.css';\n\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport EntryPage from './components/create/EntryPage';\nimport List from './components/list/List';\nimport Home from './components/Home';\nimport Edit from './components/edit/Edit';\n\n\nexport default function App() {\n\n  return (\n    <Router>\n        <div className='Wrapper'>\n          <div className='App'>\n\n            <Switch>\n              <Route path='/login'> <Login /> </Route>\n              <Route path='/register'> <Register /> </Route>\n              <Route path='/new'> <EntryPage/> </Route>\n              <Route path='/list'> <List/></Route>\n              <Route path='/edit/:id'> <Edit/> </Route>\n              <Route path='/'><Home/></Route>\n            </Switch>\n\n          </div>\n        </div>\n    </Router>\n  );\n}"
	],
	"sourceRoot": ""
}